name: Node CI

on:
  push:
    branches:
    # long-lived branches
    - master
    - develop
    - next

  pull_request:
    branches:
      - "*"

jobs:
  yarncheck:
    runs-on: ubuntu-latest
    steps:
      - run: echo "hi"
      # - uses: actions/checkout@v2
      # - uses: actions/setup-node@v2
      # - run: npm install -g yarn
      # - run: yarn install --ignore-scripts --ignore-engines
      # - run: test -z "$(git diff)" || (echo 'Please run yarn and commit all changes to yarn.lock'; false)
      # - uses: 8398a7/action-slack@v3
      #   with:
      #     channel: '#truffle-ci-notifications'
      #     status: ${{ job.status }}
      #     fields: job,commit,author,pullRequest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   if: failure()

  build:
    needs: yarncheck
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [12.x, 14.x, 16.x]
        env: [GETH=true, PACKAGES=true, INTEGRATION=true]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    # fallback to npm6 for node 16
    - name: Fallback to npm 6 on node 16
      if: ${{ matrix.node-version == '16.x' }}
      run: npm -g install npm@6

    - run: npm install -g yarn

    - name: Restore lerna
      id: cache-lerna
      uses: actions/cache@v2
      with:
        # recursively cache all node_modules/ folders
        path: |
          node_modules
          */*/node_modules
        # hash includes only the top level yarn.lock under source control
        key: test-${{ runner.os }}-${{ matrix.node-version }}-${{ hashfiles('yarn.lock') }}

    - name: Bootstrap
      id: bootstrap
      run: yarn bootstrap
      if: steps.cache-lerna.outputs.cache-hit != 'true'

    # build, transpile and create artifacts in dist/
    - name: Build packages and webpack, from cache
      run: $(yarn bin)/lerna run prepare --stream
      if: steps.bootstrap.conclusion == 'skipped'

    - name: Dependency Check
      run: yarn depcheck
    
    - run: ${{ matrix.env }} yarn ci
      env:
        CI: true
    - uses: 8398a7/action-slack@v3
      with:
        channel: '#truffle-ci-notifications'
        status: ${{ job.status }}
        fields: job,commit,author,pullRequest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }} # required for matrix field: job
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()

  slack_notification:
    needs: [yarncheck, build]
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          channel: '#truffle-ci-notifications'
          status: success
          fields: commit,author,pullRequest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork
